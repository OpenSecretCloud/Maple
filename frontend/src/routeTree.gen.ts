/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WaitlistImport } from './routes/waitlist'
import { Route as SignupImport } from './routes/signup'
import { Route as ProofImport } from './routes/proof'
import { Route as PricingImport } from './routes/pricing'
import { Route as PasswordResetImport } from './routes/password-reset'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as VerifyCodeImport } from './routes/verify.$code'
import { Route as PasswordResetConfirmImport } from './routes/password-reset.confirm'
import { Route as AuthProviderCallbackImport } from './routes/auth.$provider.callback'
import { Route as AuthChatChatIdImport } from './routes/_auth.chat.$chatId'

// Create/Update Routes

const WaitlistRoute = WaitlistImport.update({
  path: '/waitlist',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ProofRoute = ProofImport.update({
  path: '/proof',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const PasswordResetRoute = PasswordResetImport.update({
  path: '/password-reset',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyCodeRoute = VerifyCodeImport.update({
  path: '/verify/$code',
  getParentRoute: () => rootRoute,
} as any)

const PasswordResetConfirmRoute = PasswordResetConfirmImport.update({
  path: '/confirm',
  getParentRoute: () => PasswordResetRoute,
} as any)

const AuthProviderCallbackRoute = AuthProviderCallbackImport.update({
  path: '/auth/$provider/callback',
  getParentRoute: () => rootRoute,
} as any)

const AuthChatChatIdRoute = AuthChatChatIdImport.update({
  path: '/chat/$chatId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/password-reset': {
      id: '/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof PasswordResetImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/proof': {
      id: '/proof'
      path: '/proof'
      fullPath: '/proof'
      preLoaderRoute: typeof ProofImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/waitlist': {
      id: '/waitlist'
      path: '/waitlist'
      fullPath: '/waitlist'
      preLoaderRoute: typeof WaitlistImport
      parentRoute: typeof rootRoute
    }
    '/password-reset/confirm': {
      id: '/password-reset/confirm'
      path: '/confirm'
      fullPath: '/password-reset/confirm'
      preLoaderRoute: typeof PasswordResetConfirmImport
      parentRoute: typeof PasswordResetImport
    }
    '/verify/$code': {
      id: '/verify/$code'
      path: '/verify/$code'
      fullPath: '/verify/$code'
      preLoaderRoute: typeof VerifyCodeImport
      parentRoute: typeof rootRoute
    }
    '/_auth/chat/$chatId': {
      id: '/_auth/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof AuthChatChatIdImport
      parentRoute: typeof AuthImport
    }
    '/auth/$provider/callback': {
      id: '/auth/$provider/callback'
      path: '/auth/$provider/callback'
      fullPath: '/auth/$provider/callback'
      preLoaderRoute: typeof AuthProviderCallbackImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({ AuthChatChatIdRoute }),
  AboutRoute,
  LoginRoute,
  PasswordResetRoute: PasswordResetRoute.addChildren({
    PasswordResetConfirmRoute,
  }),
  PricingRoute,
  ProofRoute,
  SignupRoute,
  WaitlistRoute,
  VerifyCodeRoute,
  AuthProviderCallbackRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/login",
        "/password-reset",
        "/pricing",
        "/proof",
        "/signup",
        "/waitlist",
        "/verify/$code",
        "/auth/$provider/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/chat/$chatId"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/password-reset": {
      "filePath": "password-reset.tsx",
      "children": [
        "/password-reset/confirm"
      ]
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/proof": {
      "filePath": "proof.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/waitlist": {
      "filePath": "waitlist.tsx"
    },
    "/password-reset/confirm": {
      "filePath": "password-reset.confirm.tsx",
      "parent": "/password-reset"
    },
    "/verify/$code": {
      "filePath": "verify.$code.tsx"
    },
    "/_auth/chat/$chatId": {
      "filePath": "_auth.chat.$chatId.tsx",
      "parent": "/_auth"
    },
    "/auth/$provider/callback": {
      "filePath": "auth.$provider.callback.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
