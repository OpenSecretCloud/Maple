/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ProofImport } from './routes/proof'
import { Route as PricingImport } from './routes/pricing'
import { Route as PaymentSuccessImport } from './routes/payment-success'
import { Route as PaymentCanceledImport } from './routes/payment-canceled'
import { Route as PasswordResetImport } from './routes/password-reset'
import { Route as LoginImport } from './routes/login'
import { Route as DownloadsImport } from './routes/downloads'
import { Route as DesktopAuthImport } from './routes/desktop-auth'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as VerifyCodeImport } from './routes/verify.$code'
import { Route as PasswordResetConfirmImport } from './routes/password-reset.confirm'
import { Route as TeamInviteInviteIdImport } from './routes/team.invite.$inviteId'
import { Route as AuthProviderCallbackImport } from './routes/auth.$provider.callback'
import { Route as AuthChatChatIdImport } from './routes/_auth.chat.$chatId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ProofRoute = ProofImport.update({
  id: '/proof',
  path: '/proof',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const PaymentSuccessRoute = PaymentSuccessImport.update({
  id: '/payment-success',
  path: '/payment-success',
  getParentRoute: () => rootRoute,
} as any)

const PaymentCanceledRoute = PaymentCanceledImport.update({
  id: '/payment-canceled',
  path: '/payment-canceled',
  getParentRoute: () => rootRoute,
} as any)

const PasswordResetRoute = PasswordResetImport.update({
  id: '/password-reset',
  path: '/password-reset',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DownloadsRoute = DownloadsImport.update({
  id: '/downloads',
  path: '/downloads',
  getParentRoute: () => rootRoute,
} as any)

const DesktopAuthRoute = DesktopAuthImport.update({
  id: '/desktop-auth',
  path: '/desktop-auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyCodeRoute = VerifyCodeImport.update({
  id: '/verify/$code',
  path: '/verify/$code',
  getParentRoute: () => rootRoute,
} as any)

const PasswordResetConfirmRoute = PasswordResetConfirmImport.update({
  id: '/confirm',
  path: '/confirm',
  getParentRoute: () => PasswordResetRoute,
} as any)

const TeamInviteInviteIdRoute = TeamInviteInviteIdImport.update({
  id: '/team/invite/$inviteId',
  path: '/team/invite/$inviteId',
  getParentRoute: () => rootRoute,
} as any)

const AuthProviderCallbackRoute = AuthProviderCallbackImport.update({
  id: '/auth/$provider/callback',
  path: '/auth/$provider/callback',
  getParentRoute: () => rootRoute,
} as any)

const AuthChatChatIdRoute = AuthChatChatIdImport.update({
  id: '/chat/$chatId',
  path: '/chat/$chatId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/desktop-auth': {
      id: '/desktop-auth'
      path: '/desktop-auth'
      fullPath: '/desktop-auth'
      preLoaderRoute: typeof DesktopAuthImport
      parentRoute: typeof rootRoute
    }
    '/downloads': {
      id: '/downloads'
      path: '/downloads'
      fullPath: '/downloads'
      preLoaderRoute: typeof DownloadsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/password-reset': {
      id: '/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof PasswordResetImport
      parentRoute: typeof rootRoute
    }
    '/payment-canceled': {
      id: '/payment-canceled'
      path: '/payment-canceled'
      fullPath: '/payment-canceled'
      preLoaderRoute: typeof PaymentCanceledImport
      parentRoute: typeof rootRoute
    }
    '/payment-success': {
      id: '/payment-success'
      path: '/payment-success'
      fullPath: '/payment-success'
      preLoaderRoute: typeof PaymentSuccessImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/proof': {
      id: '/proof'
      path: '/proof'
      fullPath: '/proof'
      preLoaderRoute: typeof ProofImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/password-reset/confirm': {
      id: '/password-reset/confirm'
      path: '/confirm'
      fullPath: '/password-reset/confirm'
      preLoaderRoute: typeof PasswordResetConfirmImport
      parentRoute: typeof PasswordResetImport
    }
    '/verify/$code': {
      id: '/verify/$code'
      path: '/verify/$code'
      fullPath: '/verify/$code'
      preLoaderRoute: typeof VerifyCodeImport
      parentRoute: typeof rootRoute
    }
    '/_auth/chat/$chatId': {
      id: '/_auth/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof AuthChatChatIdImport
      parentRoute: typeof AuthImport
    }
    '/auth/$provider/callback': {
      id: '/auth/$provider/callback'
      path: '/auth/$provider/callback'
      fullPath: '/auth/$provider/callback'
      preLoaderRoute: typeof AuthProviderCallbackImport
      parentRoute: typeof rootRoute
    }
    '/team/invite/$inviteId': {
      id: '/team/invite/$inviteId'
      path: '/team/invite/$inviteId'
      fullPath: '/team/invite/$inviteId'
      preLoaderRoute: typeof TeamInviteInviteIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthChatChatIdRoute: typeof AuthChatChatIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthChatChatIdRoute: AuthChatChatIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PasswordResetRouteChildren {
  PasswordResetConfirmRoute: typeof PasswordResetConfirmRoute
}

const PasswordResetRouteChildren: PasswordResetRouteChildren = {
  PasswordResetConfirmRoute: PasswordResetConfirmRoute,
}

const PasswordResetRouteWithChildren = PasswordResetRoute._addFileChildren(
  PasswordResetRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/desktop-auth': typeof DesktopAuthRoute
  '/downloads': typeof DownloadsRoute
  '/login': typeof LoginRoute
  '/password-reset': typeof PasswordResetRouteWithChildren
  '/payment-canceled': typeof PaymentCanceledRoute
  '/payment-success': typeof PaymentSuccessRoute
  '/pricing': typeof PricingRoute
  '/proof': typeof ProofRoute
  '/signup': typeof SignupRoute
  '/password-reset/confirm': typeof PasswordResetConfirmRoute
  '/verify/$code': typeof VerifyCodeRoute
  '/chat/$chatId': typeof AuthChatChatIdRoute
  '/auth/$provider/callback': typeof AuthProviderCallbackRoute
  '/team/invite/$inviteId': typeof TeamInviteInviteIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/desktop-auth': typeof DesktopAuthRoute
  '/downloads': typeof DownloadsRoute
  '/login': typeof LoginRoute
  '/password-reset': typeof PasswordResetRouteWithChildren
  '/payment-canceled': typeof PaymentCanceledRoute
  '/payment-success': typeof PaymentSuccessRoute
  '/pricing': typeof PricingRoute
  '/proof': typeof ProofRoute
  '/signup': typeof SignupRoute
  '/password-reset/confirm': typeof PasswordResetConfirmRoute
  '/verify/$code': typeof VerifyCodeRoute
  '/chat/$chatId': typeof AuthChatChatIdRoute
  '/auth/$provider/callback': typeof AuthProviderCallbackRoute
  '/team/invite/$inviteId': typeof TeamInviteInviteIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/desktop-auth': typeof DesktopAuthRoute
  '/downloads': typeof DownloadsRoute
  '/login': typeof LoginRoute
  '/password-reset': typeof PasswordResetRouteWithChildren
  '/payment-canceled': typeof PaymentCanceledRoute
  '/payment-success': typeof PaymentSuccessRoute
  '/pricing': typeof PricingRoute
  '/proof': typeof ProofRoute
  '/signup': typeof SignupRoute
  '/password-reset/confirm': typeof PasswordResetConfirmRoute
  '/verify/$code': typeof VerifyCodeRoute
  '/_auth/chat/$chatId': typeof AuthChatChatIdRoute
  '/auth/$provider/callback': typeof AuthProviderCallbackRoute
  '/team/invite/$inviteId': typeof TeamInviteInviteIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/desktop-auth'
    | '/downloads'
    | '/login'
    | '/password-reset'
    | '/payment-canceled'
    | '/payment-success'
    | '/pricing'
    | '/proof'
    | '/signup'
    | '/password-reset/confirm'
    | '/verify/$code'
    | '/chat/$chatId'
    | '/auth/$provider/callback'
    | '/team/invite/$inviteId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/desktop-auth'
    | '/downloads'
    | '/login'
    | '/password-reset'
    | '/payment-canceled'
    | '/payment-success'
    | '/pricing'
    | '/proof'
    | '/signup'
    | '/password-reset/confirm'
    | '/verify/$code'
    | '/chat/$chatId'
    | '/auth/$provider/callback'
    | '/team/invite/$inviteId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/desktop-auth'
    | '/downloads'
    | '/login'
    | '/password-reset'
    | '/payment-canceled'
    | '/payment-success'
    | '/pricing'
    | '/proof'
    | '/signup'
    | '/password-reset/confirm'
    | '/verify/$code'
    | '/_auth/chat/$chatId'
    | '/auth/$provider/callback'
    | '/team/invite/$inviteId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DesktopAuthRoute: typeof DesktopAuthRoute
  DownloadsRoute: typeof DownloadsRoute
  LoginRoute: typeof LoginRoute
  PasswordResetRoute: typeof PasswordResetRouteWithChildren
  PaymentCanceledRoute: typeof PaymentCanceledRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  PricingRoute: typeof PricingRoute
  ProofRoute: typeof ProofRoute
  SignupRoute: typeof SignupRoute
  VerifyCodeRoute: typeof VerifyCodeRoute
  AuthProviderCallbackRoute: typeof AuthProviderCallbackRoute
  TeamInviteInviteIdRoute: typeof TeamInviteInviteIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DesktopAuthRoute: DesktopAuthRoute,
  DownloadsRoute: DownloadsRoute,
  LoginRoute: LoginRoute,
  PasswordResetRoute: PasswordResetRouteWithChildren,
  PaymentCanceledRoute: PaymentCanceledRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  PricingRoute: PricingRoute,
  ProofRoute: ProofRoute,
  SignupRoute: SignupRoute,
  VerifyCodeRoute: VerifyCodeRoute,
  AuthProviderCallbackRoute: AuthProviderCallbackRoute,
  TeamInviteInviteIdRoute: TeamInviteInviteIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/desktop-auth",
        "/downloads",
        "/login",
        "/password-reset",
        "/payment-canceled",
        "/payment-success",
        "/pricing",
        "/proof",
        "/signup",
        "/verify/$code",
        "/auth/$provider/callback",
        "/team/invite/$inviteId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/chat/$chatId"
      ]
    },
    "/desktop-auth": {
      "filePath": "desktop-auth.tsx"
    },
    "/downloads": {
      "filePath": "downloads.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/password-reset": {
      "filePath": "password-reset.tsx",
      "children": [
        "/password-reset/confirm"
      ]
    },
    "/payment-canceled": {
      "filePath": "payment-canceled.tsx"
    },
    "/payment-success": {
      "filePath": "payment-success.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/proof": {
      "filePath": "proof.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/password-reset/confirm": {
      "filePath": "password-reset.confirm.tsx",
      "parent": "/password-reset"
    },
    "/verify/$code": {
      "filePath": "verify.$code.tsx"
    },
    "/_auth/chat/$chatId": {
      "filePath": "_auth.chat.$chatId.tsx",
      "parent": "/_auth"
    },
    "/auth/$provider/callback": {
      "filePath": "auth.$provider.callback.tsx"
    },
    "/team/invite/$inviteId": {
      "filePath": "team.invite.$inviteId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
