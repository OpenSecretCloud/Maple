name: BrowserUse Tests

on:
  # Use pull_request_target to allow secrets access for bot PRs
  # SECURITY: This gives PRs access to secrets, so we must validate the author
  pull_request_target:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  browseruse-tests:
    runs-on: ubuntu-latest
    # Only run if it's from our own repo OR from specific trusted bots
    if: |
      github.event_name == 'push' || 
      github.event.pull_request.head.repo.full_name == github.repository ||
      (github.actor == 'claude[bot]' && github.event.pull_request.head.repo.full_name == github.repository)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # For pull_request_target, we need to explicitly checkout the PR head
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            frontend/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install and build frontend
        env:
          VITE_OPEN_SECRET_API_URL: https://enclave.secretgpt.ai
          VITE_MAPLE_BILLING_API_URL: https://billing-dev.opensecret.cloud
          VITE_CLIENT_ID: ba5a14b5-d915-47b1-b7b1-afda52bc5fc6
        run: |
          cd frontend
          bun install
          bun run build

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('tests/browseruse/requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('tests/browseruse/requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install test dependencies
        run: |
          cd tests/browseruse
          pip install -r requirements-ci.txt
          
      - name: Install Playwright browsers
        run: |
          if [[ "${{ steps.playwright-cache.outputs.cache-hit }}" != "true" ]]; then
            echo "Installing Playwright browsers with dependencies..."
            playwright install chromium --with-deps --no-shell
          else
            echo "Using cached Playwright browsers, installing without system deps..."
            playwright install chromium --no-shell
          fi

      - name: Start dev server
        env:
          VITE_OPEN_SECRET_API_URL: https://enclave.secretgpt.ai
          VITE_MAPLE_BILLING_API_URL: https://billing-dev.opensecret.cloud
          VITE_CLIENT_ID: ba5a14b5-d915-47b1-b7b1-afda52bc5fc6
        run: |
          cd frontend
          bun run dev &
          sleep 10  # Give server time to start
          curl -f http://localhost:5173 || exit 1  # Verify server is running

      - name: Run BrowserUse tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BROWSERUSE_TEST_EMAIL: ${{ secrets.BROWSERUSE_TEST_EMAIL }}
          BROWSERUSE_TEST_PASSWORD: ${{ secrets.BROWSERUSE_TEST_PASSWORD }}
          ANONYMIZED_TELEMETRY: false
        run: |
          cd tests/browseruse
          # Run all tests
          python test_runner.py

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-failure-logs
          path: |
            tests/browseruse/logs/
            tests/browseruse/*.json
            tests/browseruse/*.png
          retention-days: 7